app:
  image:
    repository: odpf/siren
    pullPolicy: Always
    tag: latest
  container:
    args:
      - server
      - start
    livenessProbe:
      httpGet:
        path: /ping
        port: tcp
    readinessProbe:
      httpGet:
        path: /ping
        port: tcp

  migration:
    enabled: true
    args:
      - server
      - migrate

  ingress:
    enabled: true
    hosts:
      - host: siren.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                port:
                  number: 80
  config:
    # SERVICE_PORT: 80
    DB_DRIVER: postgres
    NOTIFICATION_QUEUE_KIND: postgres
    NOTIFICATION_MESSAGE_HANDLER_ENABLED: false
    NOTIFICATION_MESSAGE_DLQ_HANDLER_ENABLED: false
    # PROVIDERS_CORTEX_WEBHOOK_BASE_API: http://localhost:8080/v1beta1/alerts/cortex
   
  secretConfig:
    DB_URL: postgres://postgres:@localhost:5432/siren?sslmode=disable
    SERVICE_ENCRYPTION_KEY: ____STRING_OF_32_CHARACTERS_____

notification-worker:
  image:
    repository: odpf/siren
    pullPolicy: Always
    tag: latest
  container:
    args:
      - worker
      - start
      - notification_handler
    # livenessProbe:
    #   exec:
    #     command:
    #     - /bin/bash
    #     - -c
    #     - ps -ef | grep siren | grep -v grep
    #   initialDelaySeconds: 10
    #   periodSeconds: 10

  migration:
    enabled: false

  ingress:
    enabled: false

  config:
    DB_DRIVER: postgres
    NOTIFICATION_QUEUE_KIND: postgres
    NOTIFICATION_MESSAGE_HANDLER_ENABLED: false
    NOTIFICATION_MESSAGE_DLQ_HANDLER_ENABLED: false
   
  secretConfig:
    DB_URL: postgres://postgres:@localhost:5432/siren?sslmode=disable
    SERVICE_ENCRYPTION_KEY: ____STRING_OF_32_CHARACTERS_____

notification-dlq-worker:
  image:
    repository: odpf/siren
    pullPolicy: Always
    tag: latest
  container:
    args:
      - worker
      - start
      - notification_dlq_handler
    # livenessProbe:
    #   exec:
    #     command:
    #     - /bin/bash
    #     - -c
    #     - ps -ef | grep siren | grep -v grep
    #   initialDelaySeconds: 10
    #   periodSeconds: 10

  migration:
    enabled: false

  ingress:
    enabled: false
    
  config:
    DB_DRIVER: postgres
    NOTIFICATION_QUEUE_KIND: postgres
    NOTIFICATION_MESSAGE_HANDLER_ENABLED: false
    NOTIFICATION_MESSAGE_DLQ_HANDLER_ENABLED: false

  secretConfig:
    DB_URL: postgres://postgres:@localhost:5432/siren?sslmode=disable
    SERVICE_ENCRYPTION_KEY: ____STRING_OF_32_CHARACTERS_____
