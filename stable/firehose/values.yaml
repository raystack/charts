replicaCount: 1

## Value to fully override firehose.name template
nameOverride: ""
## Value to fully override firehose.fullname template
fullnameOverride: ""

labels: { "application": "firehose" }

firehose:
  image:
    repository: odpf/firehose
    pullPolicy: IfNotPresent
    tag: 1.1.0
  config:
    SOURCE_KAFKA_BROKERS: 127.0.0.1:6667
    SOURCE_KAFKA_CONSUMER_GROUP_ID: kafka-consumer-group-id
    SOURCE_KAFKA_TOPIC: sample-topic
    SINK_TYPE: log
    SOURCE_KAFKA_CONSUMER_CONFIG_AUTO_OFFSET_RESET: latest
    INPUT_SCHEMA_PROTO_CLASS: com.github.firehose.sampleLogProto.SampleLogMessage
    JAVA_TOOL_OPTIONS: "-javaagent:jolokia-jvm-agent.jar=port=8778,host=localhost"
  args:
    [
      "java",
      "-cp",
      "bin/*:/work-dir/*",
      "io.odpf.firehose.launch.Main",
      "-server",
      "-Dlogback.configurationFile=etc/firehose/logback.xml",
      "-Xloggc:/var/log/firehose",
    ]
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 512Mi

init-firehose:
  enabled: false
  image:
    repository: busybox
    pullPolicy: IfNotPresent
    tag: latest
  command: ["/bin/sh", "-c"]
  args: [wget -O /work-dir/protos.jar http://proto_jar_url.jar]

telegraf:
  enabled: false
  image:
    repository: telegraf
    pullPolicy: IfNotPresent
    tag: 1.18.0-alpine
  config:
    additional_global_tags:
      team: some-team
      environment: testing
    output:
      influxdb:
        enabled: false
        urls:
          - "http://localhost:8086"
        database: "test-db"
        retention_policy: "autogen"
      prometheus_remote_write:
        enabled: false
        url: "http://localhost:8088"
        version: "0.1.0"
        # authorization: Bearer <token>
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 50m
      memory: 64Mi
