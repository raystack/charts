frontier-app:
  enabled: true
  image:
    repository: raystack/frontier
    pullPolicy: IfNotPresent
    tag: 0.7.4
  container:
    command: ["frontier", "server", "start"]
    livenessProbe:
      httpGet:
        path: /ping
        port: 8080
    readinessProbe:
      httpGet:
        path: /ping
        port: 8080
    ports:
      - name: rest
        containerPort: 8080
        protocol: TCP
      - name: grpc
        containerPort: 8081
        protocol: TCP
  service:
    type: ClusterIP
    ports:
      - port: 8080
        targetPort: 8080
        protocol: TCP
        name: tcp
      - port: 8081
        targetPort: 8081
        protocol: TCP
        name: grpc
    annotations: {}
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: contour
    hosts:
      - host: frontier.example.com
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                port:
                  number: 8080
  config:
    FRONTIER_SPICEDB_HOST: spicedb.namespace.svc.local
    FRONTIER_SPICEDB_PORT: 50051
    FRONTIER_APP_PORT: 8080
    FRONTIER_APP_GRPC_PORT: 8081
    FRONTIER_LOG_LEVEL: info
    FRONTIER_DB_DRIVER: postgres
  secretConfig:
    FRONTIER_DB_URL:
    FRONTIER_SPICEDB_PRE_SHARED_KEY:

spicedb:
  enabled: true
  nameOverride: frontier-spicedb
  replicaCount: 2
  image:
    repository: quay.io/authzed/spicedb
    tag: v1.25.0
  secretConfig:
    SPICEDB_GRPC_PRESHARED_KEY:
    SPICEDB_DATASTORE_CONN_URI:
  config:
    SPICEDB_LOG_LEVEL: info
    SPICEDB_DATASTORE_ENGINE:
    SPICEDB_GRPC_ENABLED: "true"
    SPICEDB_HTTP_ENABLED: "true"
    SPICEDB_GRPC_SHUTDOWN_GRACE_PERIOD: "5s"
  container:
    ports:
    - containerPort: 50051
      protocol: TCP
    - containerPort: 8443
      protocol: TCP
    livenessProbe:
      exec:
        command: ["grpc_health_probe", "-v", "-addr=localhost:50051"]
    readinessProbe:
      exec:
        command: ["grpc_health_probe", "-v", "-addr=localhost:50051"]
    command: ["spicedb", "serve"]
  service:
    type: ClusterIP
    ports:
      - port: 80
        name: rest
        targetPort: 8443
        protocol: TCP
      - port: 50051
        name: grpc
        targetPort: 50051
        protocol: TCP
    annotations: {}
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: contour
    hosts:
      - host: spicedb.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                port:
                  number: 80
