# -- Default values for app.
# -- This is a YAML-formatted file.
# -- Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ~
  # -- Specify the docker image path/repository.
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

podAnnotations: {}

podSecurityContext: {}
# -- Eg: fsGroup: 2000

securityContext: {}
  # -- capabilities:
  # --   drop:
  # --   - ALL
  # -- readOnlyRootFilesystem: true
  # -- runAsNonRoot: true
  # -- runAsUser: 1000

migration:
  enabled: false
  command: []
  args: []

service:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: tcp
      protocol: TCP
      name: tcp
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # -- kubernetes.io/ingress.class: nginx
    # -- kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              # name: backend_01
              port:
                number: 80
  tls: []
  # --  - secretName: chart-example-tls
  # --    hosts:
  # --      - chart-example.local

resources: {}
  # -- We usually recommend not to specify default resources and to leave this as a conscious
  # -- choice for the user. This also increases chances charts run on environments with little
  # -- resources, such as Minikube. If you do want to specify resources, uncomment the following
  # -- lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # -- limits:
  # --   cpu: 100m
  # --   memory: 128Mi
  # -- requests:
  # --   cpu: 100m
  # --   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

cron:
  enabled: false
  # -- We would recommend to use a small unique job name since it would be used to identify the cronjob in k8s
  # -- and job name would be truncated to 29 characters in the cron job template.
  jobs:
    - name: cronJob1
      schedule: "0 0 * * *"
      restartPolicy: Never
      command:
        - app
      args:
        - startJob

container:
  command: []
  args: []
  ports:
    - name: tcp
      containerPort: 8080
      protocol: TCP
  livenessProbe:
    httpGet:
      path: /
      port: tcp
  readinessProbe:
    httpGet:
      path: /
      port: tcp
  # volumeMounts:
  #   - mountPath: /data/config.yaml
  #       name: config
  #       subPath: config.yaml
# volumes:
# - name: app-service-account
#   secret:
#     defaultMode: 420
#     items:
#     - key: token
#       path: auth.json
#     secretName: app-service-account

config: {}

secretConfig: {}
  # -- Example: database connection details can go under secret config
  # DB_HOST: localhost
  # DB_NAME: app
  # DB_USER: ""
  # DB_PASSWORD: ""
  # DB_PORT: 5432

telegraf:
  enabled: false
  image: telegraf:1.19.3-alpine
  config: ~ # telegraf config
  containerPort: 8125
  protocol: UDP
  args:
  command:
    - telegraf
